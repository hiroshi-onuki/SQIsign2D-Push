include("level3/prime.jl")
include("level3/constants.jl")

include("../quaternion/order.jl")
include("../quaternion/cornacchia.jl")
include("../quaternion/ideal.jl")
include("../quaternion/klpt.jl")

include("../rii/quat_action.jl")
include("../rii/rii.jl")
include("../double_path/double_path.jl")
include("../utilities/for_compression.jl")
include("../sqisign2d_push/sqisign2d_push.jl")

const StrategiesDim2 = Dict(
    ExponentOfTwo - i => compute_strategy(ExponentOfTwo-2 - i, 2, 1)
    for i in 0:ExponentOfTwo-2
)
const StrategiesDim1Two = Dict(
    ExponentOfTwo => compute_strategy(div(ExponentOfTwo,2) - 1, 1, 1),
)

const StrategiesDim1Three = Dict(
    ExponentOfThree => compute_strategy(ExponentOfThree - 1, 1, 1),
)

function make_E0_data()
    _, T = polynomial_ring(GF(p), "T")
    Fp2, Fp2_i = finite_field(T^2 + 1, "i")

    A0 = Fp2(0)

    # constants from precompute/level3torsion.txt
    P2e = Point(75281706966575909289122016055085599244318858247854790417060526247078600752488866144754231406683503316615983540310*Fp2_i + 63506557211228670520597027244540530086276580106499487935558823704948479215187417627203192187429284343413794889191, 100731243260706371801301541414231521642015197253865936399707669807168570083593238816878021694005393183335269615203*Fp2_i + 151577645345603903276424782929438606617851657269318131863211813802933916202931413001226742093571746902340844460869)
    Q2e = Point(133607486961213272522256029720822660296437541265485560326376992102917862358533996263169615354082945924224066508713*Fp2_i + 145382636716560511290781018531367729454479819406840862807878694645047983895835444780720654573337164897426255159832, 151577645345603903276424782929438606617851657269318131863211813802933916202931413001226742093571746902340844460869*Fp2_i + 108157950667082810010076504361676737898741202259474414343729848542827893027429623591045825066761056057504780433820)
    M_i_2e = [0 3138550867693340381917894711603833208051177722232017256447; 1 0]
    M_ij_2e = [2425779036862927137225268216558738704217917946595453434324 688308830227997435991778606055271302693209789796828092272; 688308830227997435991778606055271302693209789796828092273 712771830830413244692626495045094503833259775636563822124]
    M_1k_2e = [2450242037465342945926116105548561905357967932435189164176 2425779036862927137225268216558738704217917946595453434324; 2425779036862927137225268216558738704217917946595453434324 688308830227997435991778606055271302693209789796828092273]
    P3e = Point(61311232285297531597245590380126778279200105295066354145645741624701038113634850614465870255430431221496454633636*Fp2_i + 122776458924754231272783255716811210217423166620888856005734843623303968462709340238189557482497081385026128452560, 9410768641916765399473721888440945887306427692301223469787885309295835033812142472427602883455369877340461224987*Fp2_i + 162142453367006078351352713596452590407954959528476475055441240460634937926959181462238432378568120777545689494288)
    Q3e = Point(10412081567308518577412745867816440032342692791225617700867903990282853483889243807339390225551702135363781307219*Fp2_i + 72189089522544646508035387028665043977700441775444244482587077835946521272482981478378345454998984840767871872425, 37694620739765744313427997873883383638744854253536125845041363824515218073169987466475689232366239436669407549086*Fp2_i + 184380710512681553493630971781481281817258153072197611046291998182201327417554769231931926284357767377513681530069)
    M_i_3e = [3304143025294586499294866965552303262445208553653552032 42952206801007278335563432433773542017105328600993194267; 60283956652586937986339968199101158859428835476708772636 63251794008573236108600682275544179690572407281081674131]
    M_ij_3e = [19311953122802715608827170167535629201728426786714383911 48772338306079641977383813576995434946036160811110431949; 60958438596848579332382448005398626846223100702579529722 47243983911065106999068379073560853751289189048020842252]
    M_1k_3e = [30586281568295661475351806592766546931842754115295351789 54686113007664539591759665790007136479669555669928151798; 16091003752848834168898174468394598911212799145209400749 35969655465572161132543742648329936021174861719439874375]
    M44inv_chall = [35969655465572161132543742648329936021174861719439874375 11869824026203283016135883451089346473348060164807074365 50464933281018988438997374772701884041804816689525825414 30586281568295661475351806592766546931842754115295351789; 47243983911065106999068379073560853751289189048020842252 17783598727788180630511735664101048006981455023624794214 5597498437019243275513101235697856106794515132155696441 19311953122802715608827170167535629201728426786714383911; 35319763220310844718359473369518955141011645019775215790 54592469811152005619204194720217327874966993021227669631 61632920541110220678424927811696094833017365928450286808 31236173813556977889536075871577527812005970814960010373; 61172563136591322950703613185533093863685508230590703577 42816288981461256575623782338917790006321495505121077433 32182007505697668337796348936789197822425598290418801498 5383373897276499657191936055563389089332107604144522586]

    a24_0 = A_to_a24(A0)

    xP2e = Proj1(P2e.X, P2e.Z)
    xQ2e = Proj1(Q2e.X, Q2e.Z)
    PQ2e = add(P2e, -Q2e, Proj1(A0))
    xPQ2e = Proj1(PQ2e.X, PQ2e.Z)
    basis2e = BasisData(xP2e, xQ2e, xPQ2e)

    xP3e = Proj1(P3e.X, P3e.Z)
    xQ3e = Proj1(Q3e.X, Q3e.Z)
    PQ3e = add(P3e, -Q3e, Proj1(A0))
    xPQ3e = Proj1(PQ3e.X, PQ3e.Z)
    basis3e = BasisData(xP3e, xQ3e, xPQ3e)

    Matrices_2e = [M_i_2e, M_ij_2e, M_1k_2e]
    Matrices_3e = [M_i_3e, M_ij_3e, M_1k_3e]

    return Fp2, E0Data(A0, a24_0, basis2e, basis3e, Matrices_2e, Matrices_3e, M44inv_chall)
end

# Fp2 and values in Fp2
function make_precomputed_values()
    Fp2, E0 = make_E0_data()

    i = gen(Fp2)
    x = 2*i + 1
    while is_square(x)
        x += 1
    end

    u = x
    Elligator2 = FqFieldElem[]
    for r in 1:NumOfElligator2
        push!(Elligator2, -1/(1 + u*r^2))
    end

    return GlobalData(Fp2, E0, Elligator2, u)
end