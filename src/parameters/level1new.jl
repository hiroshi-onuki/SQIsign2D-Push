include("level1new/prime.jl")
include("level1new/constants.jl")

include("../quaternion/order.jl")
include("../quaternion/cornacchia.jl")
include("../quaternion/ideal.jl")
include("../quaternion/klpt.jl")

include("../rii/quat_action.jl")
include("../rii/rii.jl")
include("../double_path/double_path.jl")
include("../utilities/for_compression.jl")
include("../sqisign2d_push/sqisign2d_push.jl")

const StrategiesDim2 = Dict(
    ExponentOfTwo - i => compute_strategy(ExponentOfTwo-2 - i, 2, 1)
    for i in 0:ExponentOfTwo-2
)
const StrategiesDim1Two = Dict(
    ExponentOfTwo => compute_strategy(div(ExponentOfTwo,2) - 1, 1, 1),
)

const StrategiesDim1Three = Dict(
    ExponentOfThree => compute_strategy(ExponentOfThree - 1, 1, 1),
)

function make_E0_data()
    _, T = polynomial_ring(GF(p), "T")
    Fp2, Fp2_i = finite_field(T^2 + 1, "i")

    A0 = Fp2(0)

    # constants from precompute/level1torsion.txt
    P2e = Point(9247814220217760600884899215223135331034233501199266834417749640731095710066*Fp2_i + 36922407131102396916539999400603357323005186653586927206497163795439337098035, 6330859359381358788394098176367403779927216650761727209703506764111001232186*Fp2_i + 43637287339445852490433031467719664065558631101435895580645562794416404140424)
    Q2e = Point(35460397624161671732998784069892178349323356200567802419189733778446811416205*Fp2_i + 7785804713277035417343683884511956357352403048180142047110319623738570028236, 43637287339445852490433031467719664065558631101435895580645562794416404140424*Fp2_i + 38377352484998073545489585108747909900430373051005342043903976655066905894085)
    M_i_2e = [0 2722258935367507707706996859454145691647; 1 0]
    M_ij_2e = [1914055409601020477196530057390095599870 244291556266646514368103956253580401043; 244291556266646514368103956253580401044 808203525766487230510466802064050091778]
    M_1k_2e = [2477967379100861193338892903200565290605 1914055409601020477196530057390095599870; 1914055409601020477196530057390095599870 244291556266646514368103956253580401044]
    P3e = Point(36841614792590463755759005640801269727773376653310157059213769969064089266351*Fp2_i + 42061245603290695965422147386278397190024219535882909565560530131300305265184, 34504148088614729532349147595002496064620161328645025092863648011114799252346*Fp2_i + 23113769042973902832375921736337466330522125029246963220155508234341184739081)
    Q3e = Point(7383024061611720398502382973097348380392785608673620348652405794702633598051*Fp2_i + 41667430848980917385275291149552234364471105155064119909562744753969545571772, 4737485018043226827855158029901206971341174276675841729480689458306947696768*Fp2_i + 1112627220021831186733561846314410767925854145586938731811210166044594871776)
    M_i_3e = [12139433739243641716093250736316249103 6243385516434566373170017035171702968; 465928049810948359797423992856174692 4283769529017016430138217064393006186]
    M_ij_3e = [4999973716905413047925710497017828681 12526042870752531055750827131114629747; 4088352514482567731899106669674270445 11423229551355245098305757303691426608]
    M_1k_3e = [3348216706690064374215492418178139285 3022355710706087064299063305550837569; 8572272754781812223240272682602891107 13074986561570593772015975382531116005]
    M44inv_chall = [13074986561570593772015975382531116005 13400847557554571081932404495158417720 7850930513478845922991195118106364182 3348216706690064374215492418178139285; 11423229551355245098305757303691426608 3897160397508127090480640669594625542 12334850753778090414332361131034984844 4999973716905413047925710497017828681; 14283716962827842525989638058428663548 2385496956809837592100169426348301237 7710776979154187104000789346492366198 2139486305432815620241829742280591741; 6696433413380128748430984836356278569 6044711421412174128598126611101675138 721342241302966300249077564496526925 9726769854880529397800482964352976720]

    a24_0 = A_to_a24(A0)

    xP2e = Proj1(P2e.X, P2e.Z)
    xQ2e = Proj1(Q2e.X, Q2e.Z)
    PQ2e = add(P2e, -Q2e, Proj1(A0))
    xPQ2e = Proj1(PQ2e.X, PQ2e.Z)
    basis2e = BasisData(xP2e, xQ2e, xPQ2e)

    xP3e = Proj1(P3e.X, P3e.Z)
    xQ3e = Proj1(Q3e.X, Q3e.Z)
    PQ3e = add(P3e, -Q3e, Proj1(A0))
    xPQ3e = Proj1(PQ3e.X, PQ3e.Z)
    basis3e = BasisData(xP3e, xQ3e, xPQ3e)

    Matrices_2e = [M_i_2e, M_ij_2e, M_1k_2e]
    Matrices_3e = [M_i_3e, M_ij_3e, M_1k_3e]

    return Fp2, E0Data(A0, a24_0, basis2e, basis3e, Matrices_2e, Matrices_3e, M44inv_chall)
end

# Fp2 and values in Fp2
function make_precomputed_values()
    Fp2, E0 = make_E0_data()

    i = gen(Fp2)
    x = 2*i + 1
    NSQs = FqFieldElem[]
    SQNSQs = FqFieldElem[]
    while length(NSQs) < NumOfNSQs || length(SQNSQs) < NumOfNSQs
        if !is_square(x)
            length(NSQs) < NumOfNSQs && push!(NSQs, x)
        elseif !is_square(x - 1)
            length(SQNSQs) < NumOfNSQs && push!(SQNSQs, x)
        end
        x += 1
    end

    u = NSQs[1]
    Elligator2 = FqFieldElem[]
    for r in 1:NumOfElligator2
        push!(Elligator2, -1/(1 + u*r^2))
    end

    return GlobalData(Fp2, E0, NSQs, SQNSQs, Elligator2, u)
end