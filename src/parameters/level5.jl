include("level5/prime.jl")
include("level5/constants.jl")

include("../quaternion/order.jl")
include("../quaternion/cornacchia.jl")
include("../quaternion/ideal.jl")
include("../quaternion/klpt.jl")

include("../rii/quat_action.jl")
include("../rii/rii.jl")
include("../double_path/double_path.jl")
include("../utilities/for_compression.jl")
include("../sqisign2d_push/sqisign2d_push.jl")

const StrategiesDim2 = Dict(
    ExponentOfTwo - i => compute_strategy(ExponentOfTwo-2 - i, 2, 1)
    for i in 0:ExponentOfTwo-2
)
const StrategiesDim1Two = Dict(
    ExponentOfTwo => compute_strategy(div(ExponentOfTwo,2) - 1, 1, 1),
)

const StrategiesDim1Three = Dict(
    ExponentOfThree => compute_strategy(ExponentOfThree - 1, 1, 1),
)

function make_E0_data()
    _, T = polynomial_ring(GF(p), "T")
    Fp2, Fp2_i = finite_field(T^2 + 1, "i")

    A0 = Fp2(0)

    # constants from precompute/level5torsion.txt
    P2e = Point(422340511962048014462408887221396561733153760009402652005312436462818517704417915757395490631862728132269037667930175854187286260399593419000505298789645924*Fp2_i + 583296874831930843891999611458400620219282648008399843367594557198180376140314017247230246146441480190116020841950141195018577975891281095461324418819569348, 2121028279399620573729824743440958327265645879228288257983678971849771103948087464873735409413670044279838265019533076166826107867236886752142139965382130404*Fp2_i + 995009074778021671502293170324185220209225607144615305623488665497495499893425844348079057773706351822651515990084088254001250272856810471499191339719274526)
    Q2e = Point(2087183279075109190361758580209595492440078100490642868594642412027336460963984351823551119080839253972512714623967479645419455732631722525216775379422232987*Fp2_i + 1926226916205226360932167855972591433953949212491645677232360291291974602528088250333716363566260501914665731449947514304588164017140034848755956259392309563, 995009074778021671502293170324185220209225607144615305623488665497495499893425844348079057773706351822651515990084088254001250272856810471499191339719274526*Fp2_i + 388495511637536631094342723990033726907585981271757262616275876640383874720314802707211200299031937824943487272364579332780634125794429192075140712829748507)
    M_i_2e = [0 3705346855594118253554271520278013051304639509300498049262642688253220148477951; 1 0]
    M_ij_2e = [3592439842062533501926369918093647952832595407515013783373355607124009273321666 3480473960467404426969876481368003904243053709764298149898926681478091796105363; 3480473960467404426969876481368003904243053709764298149898926681478091796105364 112907013531584751627901602184365098472044101785484265889287081129210875156286]
    M_1k_2e = [224872895126713826584395038910009147061585799536199899363716006775128352372589 3592439842062533501926369918093647952832595407515013783373355607124009273321666; 3592439842062533501926369918093647952832595407515013783373355607124009273321666 3480473960467404426969876481368003904243053709764298149898926681478091796105364]
    P3e = Point(323403146575676828114321848482221157953562257052056791703347993981641690849807193735829151435040855017215166316804121213006955410045914515743618340174395513*Fp2_i + 207020923349557320142268322507318689977493375300948821163564135404386688511806745786567679434869075208988433380549558044789483229092958111957039368030143731, 698100499530070252139339692416433633084881275663967319750194705985275666779004992619420184632550946831750203298649681434507541840872201303824468542954856964*Fp2_i + 1057606634104587205372039518224519863802170618725059586748872152323741930274867474216622260254153531652022952518601715663880046355199966058823380206735673611)
    Q3e = Point(1761087370846743154576841409922425473073345233239769037092921387715353874825327406469632330723456406343669416869679044802470300205936061122822754322047158767*Fp2_i + 1567051902860079592974206798801461523999642006814536977571606498955724135713221964166703299199620423624900078155626596725653681314660100514607282035020679176, 1615926763365676441373676363343582481940821780241701162122302307654511745004745493349569874460384502347108532810390550613567759354183716317729905118705608711*Fp2_i + 754757294082266629813197182939820238255826613473476429116902839200251769877177446661475654884941503775517128691378349110566022211227411141270819936337479202)
    M_i_3e = [1255712173375139350606200566648354675253531602774802090116584675546056138945 14548555535597328467941250146196490991337894036932730831796223661671947932053; 19942921978518879084648127910834234176848898276805370068324450770493958260993 20591737879464073273624455936341880467313518502137949790696239273116876216256]
    M_ij_3e = [8411112174097335286499804778228453826301883780628485376611060406184107473465 20041949754460815870813288378610860949537788091493589083691642387341012899417; 7532204748614400616191964612631448323485309555711773656058297424716164208495 13436337878741877337730851724761781316265166324284266504201763542478824881736]
    M_1k_3e = [8452563710446549909679109148539647979403500997915353829019098218392125438396 21402083908549742762278559364875001689493947591429264955866465858735989160478; 15019487155357760086996799603276791681387996212985534856687894929552852966311 13394886342392662714551547354450587163163549106997398051793725730270806916806]
    M44inv_chall = [13394886342392662714551547354450587163163549106997398051793725730270806916806 445366144289469861952097138115233453073102513483486924946358089926943194723 6827962897481452537233856899713443461179053891927217024124929019110079388890 8452563710446549909679109148539647979403500997915353829019098218392125438396; 13436337878741877337730851724761781316265166324284266504201763542478824881736 1805500298378396753417368124379374193029262013419162797121181561321919455784 14315245304224812008038691890358786819081740549200978224754526523946768146706 8411112174097335286499804778228453826301883780628485376611060406184107473465; 15566512174819531222393408989808552977350235958482168663105536136822158807985 3687893920485090649454670108034995765170632041141695454774237164347145511580 16968937571549134771966457817418897612688770939530929124604968027601302511198 6280937878019681401837247513181682165216814146430583217707287811840773547216; 16905127420893099819358218297079295958807001995830707658038196436784250876791 20956717764260272900326462226759768236420845077945778030920107768809045965755 8191524257876307549762942703563348220208942321058317832562965910442773577421 4942322631946112804872438205910939183760048109082044222774627511878681478410]

    a24_0 = A_to_a24(A0)

    xP2e = Proj1(P2e.X, P2e.Z)
    xQ2e = Proj1(Q2e.X, Q2e.Z)
    PQ2e = add(P2e, -Q2e, Proj1(A0))
    xPQ2e = Proj1(PQ2e.X, PQ2e.Z)
    basis2e = BasisData(xP2e, xQ2e, xPQ2e)

    xP3e = Proj1(P3e.X, P3e.Z)
    xQ3e = Proj1(Q3e.X, Q3e.Z)
    PQ3e = add(P3e, -Q3e, Proj1(A0))
    xPQ3e = Proj1(PQ3e.X, PQ3e.Z)
    basis3e = BasisData(xP3e, xQ3e, xPQ3e)

    Matrices_2e = [M_i_2e, M_ij_2e, M_1k_2e]
    Matrices_3e = [M_i_3e, M_ij_3e, M_1k_3e]

    return Fp2, E0Data(A0, a24_0, basis2e, basis3e, Matrices_2e, Matrices_3e, M44inv_chall)
end

# Fp2 and values in Fp2
function make_precomputed_values()
    Fp2, E0 = make_E0_data()

    i = gen(Fp2)
    x = 2*i + 1
    while is_square(x)
        x += 1
    end

    u = x
    Elligator2 = FqFieldElem[]
    for r in 1:NumOfElligator2
        push!(Elligator2, -1/(1 + u*r^2))
    end

    return GlobalData(Fp2, E0, Elligator2, u)
end